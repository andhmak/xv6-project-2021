Τα cowtest, usertests περνάνε, αλλά στο μηχάνημά μου το make grade κάνει timeout. Σε μηχανήματα της σχολής δεν θα πρέπει να υπάρχει αυτό το πρόβλημα.

Η υλοποίηση της CoW λειτουργεί ως εξής:
Υπάρχει ένας πίνακας, ο ref_arr, που περιέχει για κάθε φυσική σελίδα το πλήθος αναφορών προς αυτήν. Αυτός ο πίνακας προστατεύεται από ένα spinlock που
αρχικοποιείται όταν αρχικοποιείται το σύστημα. Το πλήθος αναφορών αρχικοποιείται σε 1 όταν η σελίδα δεσμεύεται από την kalloc. Η kfree αντίστοιχα
το μειώνει κατά 1 και απελευθερώνει την σελίδα αν φτάσει στο 0.
Όταν μια διεργασία γίνεται fork, όταν γράφεται το καινούργιο page table του παιδιού (uvmcopy), αντί να δεσμευθούν νέες φυσικές σελίδες για αυτό, τα
PTEs δείχνουν στις ίδιες φυσικές σελίδες με την γονική διεργασία, και σημειώνονται ως read-only και για τις δύο διεργασίες. Αν οι σελίδες δεν ήταν
read-only ήδη, τότε γίνεται set το CoW bit, που έχει ορισθεί ως το 9ο bit από το τέλος (μέρος των bit που είναι διαθέσιμα για supervisor software).
Επίσης, για την σελίδα αυτήν αυξάνεται το count κατά 1.
Όταν κάποια διεργασία πάει να γράψει σε αυτήν την σελίδα θα προκύψει page fault με scause ίσο με 15. Σε αυτήν την περίπτωση, θα ελεγθεί αν η σελίδα είναι
CoW (μέσω του 9ου bit), valid και user, και αν δεν είναι κάτι από αυτά τότε η διεργασία γίνεται kill. Αν περάσουν όλοι οι έλεγχοι, δεσμεύεται μια νέα
σελίδα (αν δεν μπορέσει να δεσμευθεί η διεργασία γίνεται kill) η οποία ορίζεται writable και όχι CoW και παίρνει την θέση της παλιάς, για την οποία
καλείται η kfree (που την αποδεσμεύει πραγματικά αν ο counter φτάσει στο 0).
Στην περίπτωση που καλεσθεί η copyout, η οποία δεν προκαλεί page faults και απλά χρησιμοποιεί την φυσική διεύθυνση για να γράψει, τώρα γίνεται έλεγχος
αν η σελίδα είναι read-only, στην οποία περίπτωση αν είναι και CoW γίνεται η ίδια διαδικασία σαν να είχε προκύψει page fault.

Έχουν τροποποιηθεί τα εξής αρχεία:

defs.h:
Έχουν προστεθεί κάποιοι παραπάνω ορισμοί, συμπεριλαμβανομένου του ορισμού του τύπου του καινούργιου struct που περιέχει το reference count, και
includes στο τέλος για να μπορούν να χρησιμοποιούνται σε όλα τα αρχεία.

spinlock.h:
Έχει προστεθεί ένα "#pragma once" για να μπορεί να γίνει include στο defs.h (χρειάζεται για το lock του νέου struct).

memlayout.h:
Έχει προστεθεί ένα "#pragma once" για να μπορεί να γίνει include στο defs.h (χρειάζεται για το PHYSTOP στο νέο struct).

riscv.h:
Έχει προστεθεί ένα define PTE_COW, που ορίζει ένα από τα ελεύθερα bit στα flags του pte που χρησιμοποιείται για να δείξει αν μια σελίδα είναι CoW.

kalloc.c:
Εκεί ορίζεται η μεταβλητή ref_arr, που χρησιμοποιεί τον τύπο του νέου struct, που κρατάει την πληροφορία για το πλήθος αναφορών κάθε σελίδας.
Η kinit έχει τροποποιηθεί για να αρχικοποιεί και το lock του ref_arr.
Η kfree έχει τροποποιηθεί για να μειώνει το reference count της σελίδας και να την απελευθερώνει μόνο αν μετά την μείωση γίνει 0.
Η kalloc έχει τροποποιηθεί ώστε να αρχικοποιεί το reference count της νέας σελίδας σε 1.

vm.c:
Έχει δηλωθεί η μεταβλητή ref_arr που ορίζεται στο kalloc.c ως extern.
Έχει τροποποιηθεί η uvmcopy ώστε, αντί να βάζει νέες φυσικές σελίδες στις νέες εγγραφές, να βάζει να δείχνουν στις παλιές, να αυξάνει το αντίστοιχο
reference count κατά 1, και να ορίζει και την παλιά και την καινούργια εγγραφη ως read-only και, αν δεν ήταν πριν read-only, ως CoW.
Έχει τροποποιηθεί η copyout ώστε να προσομοιώνει την λειτουργία της usertrap στην περίπτωση CoW.

trap.c:
Έχει τροποποιηθεί η usertrap ώστε να αναγνωρίζει την περίπτωση που προκαλείται page fault από προσπάθεια γραψίματος σε read-only σελίδα
(r_scause() == 15), και να την διαχειρίζεται με ειδικό τρόπο, λαμβάνοντας υπόψιν την ύπαρξη CoW σελίδων.